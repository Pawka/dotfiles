# Create class. Detect namespace by file structure.
snippet class
	<?php

	namespace ${1:`substitute(substitute(expand("%:h"), '\v^\w+\/(\u)', '\1', ''), '\/', '\\\', 'g')`};

	class ${2:`Filename('', 'MyClass')`}
	{
		${3}
	}
# PHPUnit test case class.
snippet test
	<?php

	namespace ${1:`substitute(substitute(expand("%:h"), '\v^\w+\/(\u)', '\1', ''), '\/', '\\\', 'g')`};

	class ${2:`Filename('', 'MyClass')`} extends \PHPUnit_Framework_TestCase
	{
		${3}
	}
# Namespace
snippet ns
	namespace ${1:`substitute(substitute(expand("%:h"), '\v^\w+\/(\u)', '\1', ''), '\/', '\\\', 'g')`};

# ReflectionMethod
snippet refm
	$${1:refl} = new \ReflectionMethod(${2:$class}, '${3:methodName}');
	$$1->setAccessible(true);
	$$1->invoke($2);

# ReflectionProperty
snippet refp
	$${1:refl} = new \ReflectionProperty(${2:$class}, '${3:propertyName}');
	$$1->setAccessible(true);
	$$1->setValue($2, '${4:value}');
