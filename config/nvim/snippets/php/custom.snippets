# PsySH debug line
snippet psy
	require 'psysh';
	\Psy\Shell::debug(get_defined_vars());

#xhprof profiling code
snippet xhprof
	xhprof_enable(XHPROF_FLAGS_CPU | XHPROF_FLAGS_MEMORY);

	//PART FOR TEST SUBJECT
	$xhprof_data = xhprof_disable();
	$XHPROF_ROOT = '/home/pawka/www/xhprof';
	include_once $XHPROF_ROOT . "/xhprof_lib/utils/xhprof_lib.php";
	include_once $XHPROF_ROOT . "/xhprof_lib/utils/xhprof_runs.php";
	$xhprof_runs = new \XHProfRuns_Default();
	$run_id = $xhprof_runs->save_run($xhprof_data, "xhprof_foo");
	echo "---------------\n".
		 "http://localhost/xhprof/xhprof_html/index.php?run=$run_id&source=xhprof_foo\n".
		 "---------------\n";
	// END OF XHPROF CODE

#debug backtrace
snippet bt
	var_dump(debug_backtrace()); exit;

# Create class. Detect namespace by file structure.
snippet class
	<?php

	namespace ${1:`substitute(substitute(expand("%:h"), '\v^\w+\/(\u)', '\1', ''), '\/', '\\\', 'g')`};

	class ${2:`Filename('', 'MyClass')`}
	{
		${3}
	}
# PHPUnit test case class.
snippet testc
	<?php

	namespace ${1:`substitute(substitute(expand("%:h"), '\v^\w+\/(\u)', '\1', ''), '\/', '\\\', 'g')`};

	class ${2:`Filename('', 'MyClass')`} extends \PHPUnit_Framework_TestCase
	{
		${3}
	}
# Namespace
snippet ns
	namespace ${1:`substitute(substitute(expand("%:h"), '\v^\w+\/(\u)', '\1', ''), '\/', '\\\', 'g')`};

# Namespace only
snippet nso
	${1:`substitute(substitute(expand("%:h"), '\v^\w+\/(\u)', '\1', ''), '\/', '\\\', 'g')`}

# ReflectionMethod
snippet refm
	$${1:refl} = new \ReflectionMethod(${2:$class}, '${3:methodName}');
	$$1->setAccessible(true);
	$$1->invoke($2);

# ReflectionProperty
snippet refp
	$${1:refl} = new \ReflectionProperty(${2:$class}, '${3:propertyName}');
	$$1->setAccessible(true);
	$$1->setValue($2, '${4:value}');
